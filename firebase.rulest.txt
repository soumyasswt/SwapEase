rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // User-specific data (Profile, Cart, Orders)
    match /users/{userId} {
      allow read: if request.auth != null && (request.auth.uid == userId || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.userRole == 'Admin');
      allow write: if request.auth != null && request.auth.uid == userId; 

      match /cart/{cartItemId} {
        allow read, write: if request.auth != null && request.auth.uid == userId; 
      }

      match /orders/{orderId} {
        allow read, write: if request.auth != null && request.auth.uid == userId; 
      }
    }

    // Product Listings
    match /products/{productId} {
      allow read: if true; // Publicly accessible
      allow create, update, delete: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.userRole == 'Admin'; 
      
      match /reviews/{reviewId} {
        allow read: if true; 
        allow create: if request.auth != null; 
        allow update, delete: if request.auth != null && request.auth.uid == resource.data.userId; 
      }
    }

    // Rental Requests (Users can manage their own requests)
    match /rentalRequests/{requestId} {
      allow read, write: if request.auth != null && request.auth.uid == resource.data.userId;
    }

    // Chats (Only participants can access)
    match /chats/{chatId} {
      allow read, write: if request.auth != null && (request.auth.uid in resource.data.participants);
    }
  }
}
